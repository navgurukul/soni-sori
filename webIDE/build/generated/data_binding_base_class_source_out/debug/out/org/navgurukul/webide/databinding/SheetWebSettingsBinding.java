// Generated by view binder compiler. Do not edit!
package org.navgurukul.webide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.navgurukul.webide.R;

public final class SheetWebSettingsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final SwitchCompat allowContentAccess;

  @NonNull
  public final SwitchCompat allowFileAccess;

  @NonNull
  public final SwitchCompat allowFileAccessFromFileUrls;

  @NonNull
  public final SwitchCompat allowUniversalAccessFromFileUrls;

  @NonNull
  public final SwitchCompat blockNetworkImage;

  @NonNull
  public final SwitchCompat blockNetworkLoads;

  @NonNull
  public final SwitchCompat builtInZoomControls;

  @NonNull
  public final SwitchCompat database;

  @NonNull
  public final SwitchCompat displayZoomControls;

  @NonNull
  public final SwitchCompat domStorage;

  @NonNull
  public final SwitchCompat imageLoad;

  @NonNull
  public final SwitchCompat jsCanOpenWindows;

  @NonNull
  public final SwitchCompat jsEnabled;

  @NonNull
  public final SwitchCompat loadOverview;

  @NonNull
  public final SwitchCompat wideView;

  private SheetWebSettingsBinding(@NonNull NestedScrollView rootView,
      @NonNull SwitchCompat allowContentAccess, @NonNull SwitchCompat allowFileAccess,
      @NonNull SwitchCompat allowFileAccessFromFileUrls,
      @NonNull SwitchCompat allowUniversalAccessFromFileUrls,
      @NonNull SwitchCompat blockNetworkImage, @NonNull SwitchCompat blockNetworkLoads,
      @NonNull SwitchCompat builtInZoomControls, @NonNull SwitchCompat database,
      @NonNull SwitchCompat displayZoomControls, @NonNull SwitchCompat domStorage,
      @NonNull SwitchCompat imageLoad, @NonNull SwitchCompat jsCanOpenWindows,
      @NonNull SwitchCompat jsEnabled, @NonNull SwitchCompat loadOverview,
      @NonNull SwitchCompat wideView) {
    this.rootView = rootView;
    this.allowContentAccess = allowContentAccess;
    this.allowFileAccess = allowFileAccess;
    this.allowFileAccessFromFileUrls = allowFileAccessFromFileUrls;
    this.allowUniversalAccessFromFileUrls = allowUniversalAccessFromFileUrls;
    this.blockNetworkImage = blockNetworkImage;
    this.blockNetworkLoads = blockNetworkLoads;
    this.builtInZoomControls = builtInZoomControls;
    this.database = database;
    this.displayZoomControls = displayZoomControls;
    this.domStorage = domStorage;
    this.imageLoad = imageLoad;
    this.jsCanOpenWindows = jsCanOpenWindows;
    this.jsEnabled = jsEnabled;
    this.loadOverview = loadOverview;
    this.wideView = wideView;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static SheetWebSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SheetWebSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sheet_web_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SheetWebSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allowContentAccess;
      SwitchCompat allowContentAccess = ViewBindings.findChildViewById(rootView, id);
      if (allowContentAccess == null) {
        break missingId;
      }

      id = R.id.allowFileAccess;
      SwitchCompat allowFileAccess = ViewBindings.findChildViewById(rootView, id);
      if (allowFileAccess == null) {
        break missingId;
      }

      id = R.id.allowFileAccessFromFileUrls;
      SwitchCompat allowFileAccessFromFileUrls = ViewBindings.findChildViewById(rootView, id);
      if (allowFileAccessFromFileUrls == null) {
        break missingId;
      }

      id = R.id.allowUniversalAccessFromFileUrls;
      SwitchCompat allowUniversalAccessFromFileUrls = ViewBindings.findChildViewById(rootView, id);
      if (allowUniversalAccessFromFileUrls == null) {
        break missingId;
      }

      id = R.id.blockNetworkImage;
      SwitchCompat blockNetworkImage = ViewBindings.findChildViewById(rootView, id);
      if (blockNetworkImage == null) {
        break missingId;
      }

      id = R.id.blockNetworkLoads;
      SwitchCompat blockNetworkLoads = ViewBindings.findChildViewById(rootView, id);
      if (blockNetworkLoads == null) {
        break missingId;
      }

      id = R.id.builtInZoomControls;
      SwitchCompat builtInZoomControls = ViewBindings.findChildViewById(rootView, id);
      if (builtInZoomControls == null) {
        break missingId;
      }

      id = R.id.database;
      SwitchCompat database = ViewBindings.findChildViewById(rootView, id);
      if (database == null) {
        break missingId;
      }

      id = R.id.displayZoomControls;
      SwitchCompat displayZoomControls = ViewBindings.findChildViewById(rootView, id);
      if (displayZoomControls == null) {
        break missingId;
      }

      id = R.id.domStorage;
      SwitchCompat domStorage = ViewBindings.findChildViewById(rootView, id);
      if (domStorage == null) {
        break missingId;
      }

      id = R.id.imageLoad;
      SwitchCompat imageLoad = ViewBindings.findChildViewById(rootView, id);
      if (imageLoad == null) {
        break missingId;
      }

      id = R.id.jsCanOpenWindows;
      SwitchCompat jsCanOpenWindows = ViewBindings.findChildViewById(rootView, id);
      if (jsCanOpenWindows == null) {
        break missingId;
      }

      id = R.id.jsEnabled;
      SwitchCompat jsEnabled = ViewBindings.findChildViewById(rootView, id);
      if (jsEnabled == null) {
        break missingId;
      }

      id = R.id.loadOverview;
      SwitchCompat loadOverview = ViewBindings.findChildViewById(rootView, id);
      if (loadOverview == null) {
        break missingId;
      }

      id = R.id.wideView;
      SwitchCompat wideView = ViewBindings.findChildViewById(rootView, id);
      if (wideView == null) {
        break missingId;
      }

      return new SheetWebSettingsBinding((NestedScrollView) rootView, allowContentAccess,
          allowFileAccess, allowFileAccessFromFileUrls, allowUniversalAccessFromFileUrls,
          blockNetworkImage, blockNetworkLoads, builtInZoomControls, database, displayZoomControls,
          domStorage, imageLoad, jsCanOpenWindows, jsEnabled, loadOverview, wideView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
