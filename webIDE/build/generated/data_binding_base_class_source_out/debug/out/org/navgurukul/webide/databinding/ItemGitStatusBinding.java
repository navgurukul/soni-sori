// Generated by view binder compiler. Do not edit!
package org.navgurukul.webide.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.navgurukul.webide.R;

public final class ItemGitStatusBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView added;

  @NonNull
  public final TextView changed;

  @NonNull
  public final TextView conflict;

  @NonNull
  public final TextView missing;

  @NonNull
  public final TextView modified;

  @NonNull
  public final TextView removed;

  @NonNull
  public final TextView uncommitted;

  @NonNull
  public final TextView untracked;

  @NonNull
  public final TextView untrackedFolders;

  private ItemGitStatusBinding(@NonNull NestedScrollView rootView, @NonNull TextView added,
      @NonNull TextView changed, @NonNull TextView conflict, @NonNull TextView missing,
      @NonNull TextView modified, @NonNull TextView removed, @NonNull TextView uncommitted,
      @NonNull TextView untracked, @NonNull TextView untrackedFolders) {
    this.rootView = rootView;
    this.added = added;
    this.changed = changed;
    this.conflict = conflict;
    this.missing = missing;
    this.modified = modified;
    this.removed = removed;
    this.uncommitted = uncommitted;
    this.untracked = untracked;
    this.untrackedFolders = untrackedFolders;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGitStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGitStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_git_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGitStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.added;
      TextView added = ViewBindings.findChildViewById(rootView, id);
      if (added == null) {
        break missingId;
      }

      id = R.id.changed;
      TextView changed = ViewBindings.findChildViewById(rootView, id);
      if (changed == null) {
        break missingId;
      }

      id = R.id.conflict;
      TextView conflict = ViewBindings.findChildViewById(rootView, id);
      if (conflict == null) {
        break missingId;
      }

      id = R.id.missing;
      TextView missing = ViewBindings.findChildViewById(rootView, id);
      if (missing == null) {
        break missingId;
      }

      id = R.id.modified;
      TextView modified = ViewBindings.findChildViewById(rootView, id);
      if (modified == null) {
        break missingId;
      }

      id = R.id.removed;
      TextView removed = ViewBindings.findChildViewById(rootView, id);
      if (removed == null) {
        break missingId;
      }

      id = R.id.uncommitted;
      TextView uncommitted = ViewBindings.findChildViewById(rootView, id);
      if (uncommitted == null) {
        break missingId;
      }

      id = R.id.untracked;
      TextView untracked = ViewBindings.findChildViewById(rootView, id);
      if (untracked == null) {
        break missingId;
      }

      id = R.id.untrackedFolders;
      TextView untrackedFolders = ViewBindings.findChildViewById(rootView, id);
      if (untrackedFolders == null) {
        break missingId;
      }

      return new ItemGitStatusBinding((NestedScrollView) rootView, added, changed, conflict,
          missing, modified, removed, uncommitted, untracked, untrackedFolders);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
